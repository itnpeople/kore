name: Create a release and upload artifacts
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (optional)'
        required: false
  push:
    tags:
      - v*
jobs:
  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        id: variables
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ $VERSION == "" ]]; then
            GITHUB_REF="${{ github.ref }}"
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION="$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')-$(date '+%Y%m%d')"
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION="pr-${{ github.event.number }}"
            fi
          fi
          echo ::set-output name=version::${VERSION}
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18.0
      - name: Build artifacts
        run: |
          GOOS=linux GOARCH=amd64 go build -o bin/linux/amd64/korectl -ldflags="-X 'github.com/kore3lab/kore/cmd.BuildTime=$(date -u +%FT%T%Z)' -X 'github.com/kore3lab/kore/cmd.BuildVersion=${{ steps.variables.outputs.version }}'" cmd/korectl/main.go
          GOOS=darwin GOARCH=amd64 go build -o bin/darwin/amd64/korectl -ldflags="-X 'github.com/kore3lab/kore/cmd.BuildTime=$(date -u +%FT%T%Z)' -X 'github.com/kore3lab/kore/cmd.BuildVersion=${{ steps.variables.outputs.version }}'" cmd/korectl/main.go
          GOOS=windows GOARCH=amd64 go build -o bin/windows/amd64/korectl.exe -ldflags="-X 'github.com/kore3lab/kore/cmd.BuildTime=$(date -u +%FT%T%Z)' -X 'github.com/kore3lab/kore/cmd.BuildVersion=${{ steps.variables.outputs.version }}'" cmd/korectl/main.go
      - name: Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: true
          release_name: Release ${{ steps.variables.outputs.version }}
          tag_name: ${{ steps.variables.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/linux/amd64/korectl
          asset_name: korectl-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload darwin artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/darwin/amd64/korectl
          asset_name: korectl-darwin-amd64
          asset_content_type: application/octet-stream
      - name: Upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/windows/amd64/korectl.exe
          asset_name: korectl-windows-amd64.exe
          asset_content_type: application/octet-stream